// Copyright 2016 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------
// The proto is taken from Hyperledger sawtooth 1.2.6 version and modified to
// our requirement

syntax = "proto3";

package transaction;

message TransactionHeader {
  // The family name correlates to the transaction processor's family name
  // that this transaction can be processed on, for example 'intkey'
  string family_name = 1;

  // A list of addresses that are given to the context manager and control
  // what addresses the transaction processor is allowed to read from.
  repeated string inputs = 2;

  // A string that provides client ID
  string client_ID = 3;

  // A random string that provides uniqueness for transactions with
  // otherwise identical fields.
  string client_nonce = 4;

  // A list of addresses that are given to the context manager and control
  // what addresses the transaction processor is allowed to write to.
  repeated string outputs = 5;
}

message Transaction {
  // The serialized version of the TransactionHeader
  bytes header = 1;

  // dependencies for smart validator
  repeated string dependencies = 2;

  // The payload is the encoded family specific information of the
  // transaction. Example cbor({'Verb': verb, 'Name': name,'Value': value})
  bytes payload = 3;
}

// A simple list of transactions that needs to be serialized before
// it can be transmitted to a batcher.
message TransactionList {
  repeated Transaction transactions = 1;
}
